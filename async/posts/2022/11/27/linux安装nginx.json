{"tags":[{"name":"linux","permalink":"https://xuanxiaoming.github.io/tags/linux/","url":"/async/tags/linux.json","count":4}],"categories":[],"url":"/async/posts/2022/11/27/linux安装nginx.json","date":1669539099000,"path":{"year":2022,"month":11,"day":27,"name":"linux安装nginx"},"title":"Linux安装Nginx","permalink":"https://xuanxiaoming.github.io/2022/11/27/linux%E5%AE%89%E8%A3%85nginx/","content":"<h1 id=\"Linux安装Nginx\"><a href=\"#Linux安装Nginx\" class=\"headerlink\" title=\"Linux安装Nginx\"></a>Linux安装Nginx</h1><h3 id=\"一、安装nginx\"><a href=\"#一、安装nginx\" class=\"headerlink\" title=\"一、安装nginx\"></a>一、安装nginx</h3><p>使用 apt 来安装 Nginx</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">sudo apt -y update\nsudo apt -y install nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<br>  \n\n<h3 id=\"二、配置防火墙\"><a href=\"#二、配置防火墙\" class=\"headerlink\" title=\"二、配置防火墙\"></a>二、配置防火墙</h3><p>在测试 Nginx 之前，我们需要调整防火墙，让他允许 Nginx 服务通过。Nginx ufw 在安装时会把他自身注册成为服务。</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">sudo ufw app list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>输出结果：</p>\n<pre class=\"line-numbers language-Plain\"><code class=\"language-Plain\">Available applications:\n  Nginx Full\n  Nginx HTTP\n  Nginx HTTPS\n  OpenSSH<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Nginx 提供了三个配置文件：</p>\n<ul>\n<li><p><strong>Nginx Full</strong><br>开端口80 正常，未加密的网络流量<br>端口443 TLS / SSL加密的流量</p>\n</li>\n<li><p><strong>Nginx HTTP</strong><br>仅打开端口80 正常，未加密</p>\n</li>\n<li><p><strong>Nginx HTTPS</strong><br>仅打开端口443 TLS / SSL加密</p>\n</li>\n</ul>\n<br>\n先测试HTTP，配置防火墙允许服务通过\n\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">sudo ufw allow 'Nginx HTTP'<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<br>  \n\n<h3 id=\"三、检查web服务器\"><a href=\"#三、检查web服务器\" class=\"headerlink\" title=\"三、检查web服务器\"></a>三、检查web服务器</h3><p>用以下命令来查看更改结果</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">sudo ufw status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>我们可以在输出结果中看到</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">Status: active\n\nTo                         Action      From\n--                         ------      ----\nOpenSSH                    ALLOW       Anywhere                  \nNginx HTTP                 ALLOW       Anywhere                  \nOpenSSH (v6)               ALLOW       Anywhere (v6)             \nNginx HTTP (v6)            ALLOW       Anywhere (v6)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>若未看到上述结果，先检查nginx服务是否开启</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">service nginx status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>看到 <code>Active: active (running)</code> 说明已启动</p>\n<p>使用以下命令检查内网ip</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">ip addr show eth0 | grep inet | awk '{ print $2; }' | sed 's/\\/.*$//'<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>使用以下命令检查公网ip</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">curl -4 icanhazip.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>当nginx服务运行后可以在浏览器访问<a href=\"http://本地IP\" target=\"_blank\" rel=\"noopener\">http://本地IP</a></p>\n<br>  \n\n<h3 id=\"四、管理nginx\"><a href=\"#四、管理nginx\" class=\"headerlink\" title=\"四、管理nginx\"></a>四、管理nginx</h3><p>停止、启动、重启、配置服务器跟随系统启动，配置不跟随服务器启动，热加载配置</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">sudo service nginx stop\nsudo service nginx start\nsudo service nginx restart\nsudo service nginx disable\nsudo service nginx enable\nsudo service nginx reload  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<br>\n\n<h3 id=\"五、设置服务块\"><a href=\"#五、设置服务块\" class=\"headerlink\" title=\"五、设置服务块\"></a>五、设置服务块</h3><p>如果是部署到公网上以供公共访问，首先需要准备一个域名</p>\n<p>假设网站是 <code>http://example.com</code></p>\n<p>nginx默认前端资源存储位置在 <code>/var/www</code></p>\n<p>先在该路径下创建存放网页资源的文件夹，路径为 <code>/var/www/example.com/html</code>，然后为该文件夹分配权限</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">sudo chown -R $USER:$USER /var/www/example.com/html\nsudo chmod -R 755 /var/www/example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>先随便添加一个网页做测试</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">vim /var/www/example.com/html/index.html<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>内容随便写一个 <code>&lt;h1&gt;HELLO WORLD!&lt;/h1&gt;</code></p>\n<p>接下来要在nginx的服务中创建一个新的服务器块</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">sudo vim /etc/nginx/sites-available/example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>内容如下：</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">server {\n        listen 80;\n        listen [::]:80;\n        root /var/www/example.com/html;\n        index index.html index.htm index.nginx-debian.html;\n        server_name example.com www.example.com;\n        location / {\n                try_files $uri $uri/ =404;\n        }\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>为上述文件创建链接，让nginx启动时读取目录</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">sudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>为避免可能由于添加其他服务器名称而引起的哈希存储区内存问题，有必要调整 <code>/etc/nginx/nginx.conf</code> 文件中的单个值</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">http {\n    ...\n    # 找到这行，将注释去掉\n    server_names_hash_bucket_size 64;\n    ...\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>重启nginx</p>\n<pre class=\"line-numbers language-Shell\"><code class=\"language-Shell\">sudo service nginx restart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>检查一下nginx的运行状态之后，就可以尝试在浏览器访问 <code>http://example.com</code></p>\n<br>\n\n<h3 id=\"六、-一些重要路径\"><a href=\"#六、-一些重要路径\" class=\"headerlink\" title=\"六、 一些重要路径\"></a>六、 一些重要路径</h3><p><code>/etc/nginx Nginx</code> 配置目录。所有 Nginx 的配置文件都在这里</p>\n<p><code>/etc/nginx/nginx.conf</code> Nginx的配置文件。大多数全局配置可以通过这个文件来修改</p>\n<p><code>/etc/nginx/sites-available/sites-enabled</code> 用来存储服务器下每个站点服务器块的目录。 默认情况下 Nginx 不会直接使用目录下的配置文件，需要我们更改配置来告诉 Nginx 来去读</p>\n<p><code>/etc/nginx/sites-enabled/sites-available</code> 这里是存储已经启用站点服务器块的目录</p>\n<p><code>/etc/nginx/snippets</code> 这个目录包含一些 Nginx 的配置文件。可打开详细查看这些配置文件到文档进行学习</p>\n<p><code>/var/log/nginx/access.log</code> 这里是 Nginx 到日志文件，对 Web 服务器的每个请求都会记录在这个日志中</p>\n<p><code>/var/log/nginx/error.log</code> 记录 Nginx 运行过程中发生的错误日志</p>\n"}